@model CS322_PZ_AnteaPrimorac5157.ViewModels.CreateConfessionViewModel

@{
    ViewData["Title"] = "Submit Confession";
}

<div class="container">
    <h2>Submit Your Confession</h2>
    <div class="row">
        <div class="col-md-8">
            <form asp-action="Create" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-group mb-3">
                    <label asp-for="Title" class="control-label">Title</label>
                    <input asp-for="Title" class="form-control" maxlength="50" id="titleInput" />
                    <small class="text-muted">
                        Characters remaining: <span id="titleCounter">50</span>
                    </small>
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="Content" class="control-label">Content</label>
                    <div class="btn-toolbar mb-2">
                        <div class="btn-group me-2">
                            <button type="button" class="btn btn-sm btn-outline-secondary" onclick="formatText('b')">
                                <i class="fas fa-bold"></i>
                            </button>
                            <button type="button" class="btn btn-sm btn-outline-secondary" onclick="formatText('i')">
                                <i class="fas fa-italic"></i>
                            </button>
                        </div>
                    </div>
                    <textarea asp-for="Content" class="form-control" rows="5" id="contentInput" maxlength="2000"></textarea>
                    <small class="text-muted">
                        Characters remaining: <span id="contentCounter">2000</span>
                    </small>
                    <span asp-validation-for="Content" class="text-danger"></span>
                </div>

                <div class="card mb-3">
                    <div class="card-header">
                        Preview
                    </div>
                    <div class="card-body">
                        <h5 class="card-title" id="previewTitle"></h5>
                        <div class="card-text" id="previewContent"></div>
                    </div>
                </div>

                <div class="form-group">
                    <button type="submit" class="btn btn-primary">Submit Confession</button>
                    <a asp-controller="Home" asp-action="Index" class="btn btn-secondary">Cancel</a>
                </div>
            </form>
        </div>
        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    Formatting Tips
                </div>
                <div class="card-body">
                    <p>You can use these formatting options:</p>
                    <ul>
                        <li><strong>Bold text</strong>: Click B or use &lt;b&gt;text&lt;/b&gt;</li>
                        <li><em>Italic text</em>: Click I or use &lt;i&gt;text&lt;/i&gt;</li>
                        <li>Paragraphs: Press Enter for new line</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Brojanje karaktera
        document.getElementById('titleInput').addEventListener('input', function (e) {
            const remaining = 50 - this.value.length;
            const counter = document.getElementById('titleCounter');
            counter.textContent = remaining;
            counter.classList.toggle('text-danger', remaining < 10);
            updatePreview();
        });

        document.getElementById('contentInput').addEventListener('input', function (e) {
            const remaining = 2000 - this.value.length;
            const counter = document.getElementById('contentCounter');
            counter.textContent = remaining;
            counter.classList.toggle('text-danger', remaining < 1000);
            updatePreview();
        });

        // Formatiranje teksta
        function formatText(tag) {
            const textarea = document.getElementById('contentInput');
            const start = textarea.selectionStart;
            const end = textarea.selectionEnd;
            const selectedText = textarea.value.substring(start, end);
            const replacement = `<${tag}>${selectedText}</${tag}>`;

            textarea.value = textarea.value.substring(0, start)
                         + replacement
                         + textarea.value.substring(end);

            updatePreview();
        }

        // Live preview
        function updatePreview() {
            const title = document.getElementById('titleInput').value;
            const content = document.getElementById('contentInput').value;

            document.getElementById('previewTitle').textContent = title;
            document.getElementById('previewContent').innerHTML = content;
        }

        // Initial preview
        updatePreview();
    </script>
}